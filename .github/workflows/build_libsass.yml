name: build_libsass

on:
  push:
    branches: [ master ]
jobs:

  build_ubuntu:
    runs-on: ubuntu-20.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
          sudo apt-get install gcc-aarch64-linux-gnu
          sudo apt-get install g++-aarch64-linux-gnu
          sudo apt-get install gcc-arm-linux-gnueabihf
          sudo apt-get install g++-arm-linux-gnueabihf

    - name: Build x64
      run: |
        export BUILD="shared"
        make clean
        make -j5

    - name: Upload x64
      uses: actions/upload-artifact@v4
      with:
        name: libsass_ubuntu_x64
        path: lib/libsass.so

    - name: Build arm
      run: |
        export BUILD="shared"
        export CC="arm-linux-gnueabihf-gcc"
        export CFLAGS="-Wall -march=armv7-a -mfloat-abi=hard -mfpu=neon"
        export CXX="arm-linux-gnueabihf-g++"
        export CXXFLAGS="-Wall -march=armv7-a -mfloat-abi=hard -mfpu=neon"        
        make clean
        make -j5
        
    - name: Upload arm
      uses: actions/upload-artifact@v4
      with:
        name: libsass_ubuntu_arm
        path: lib/libsass.so

    - name: Build arm64
      run: |
        export BUILD="shared"
        export CC="aarch64-linux-gnu-gcc"
        export CFLAGS="-Wall -march=armv8-a"
        export CXX="aarch64-linux-gnu-g++"
        export CXXFLAGS="-Wall -march=armv8-a"        
        make clean
        make -j5

    - name: Upload arm64
      uses: actions/upload-artifact@v4
      with:
        name: libsass_ubuntu_arm64
        path: lib/libsass.so

  build_macos:
    runs-on: macos-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Build arm64
      run: |
        export BUILD="shared"
        make clean
        make -j5

    - name: Upload arm64
      uses: actions/upload-artifact@v4
      with:
        name: libsass_macos_arm64
        path: lib/libsass.dylib

    - name: Build x64
      run: |
        export BUILD="shared"
        export CFLAGS="-Wall -arch x86_64"
        export CXXFLAGS="-Wall -arch x86_64"
        export LDFLAGS="-Wall -arch x86_64"
        make clean
        make -j5

    - name: Upload x64
      uses: actions/upload-artifact@v4
      with:
        name: libsass_macos_x64
        path: lib/libsass.dylib

  build_windows:
    runs-on: windows-latest
    needs: [build_ubuntu, build_macos]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build x86
      run: msbuild win\libsass.sln /p:Configuration=Release /p:Platform=Win32

    - name: Build x64
      run: msbuild win\libsass.sln /p:Configuration=Release /p:Platform=Win64

    - name: Build ARM
      run: msbuild win\libsass.sln /p:Configuration=Release /p:Platform=ARM

    - name: Build ARM64
      run: msbuild win\libsass.sln /p:Configuration=Release /p:Platform=ARM64

    - name: Download libsass_ubuntu_x64
      uses: actions/download-artifact@v4
      with:
        name: libsass_ubuntu_x64

    - name: Download libsass_ubuntu_arm
      uses: actions/download-artifact@v4
      with:
        name: libsass_ubuntu_arm

    - name: Download libsass_ubuntu_arm64
      uses: actions/download-artifact@v4
      with:
        name: libsass_ubuntu_arm64

    - name: Download libsass_macos_arm64
      uses: actions/download-artifact@v4
      with:
        name: libsass_macos_arm64

    - name: Download libsass_macos_x64
      uses: actions/download-artifact@v4
      with:
        name: libsass_macos_x64

    - name: List files
      run: |
        ls -R

    - name: Prepare pack
      run: |
        mkdir runtimes\linux-x64\native
        mkdir runtimes\linux-arm\native
        mkdir runtimes\linux-arm64\native
        mkdir runtimes\osx-x64\native
        mkdir runtimes\osx-arm64\native
        mkdir runtimes\win-x86\native
        mkdir runtimes\win-x64\native
        mkdir runtimes\win-arm\native
        mkdir runtimes\win-arm64\native
        copy libsass_ubuntu_x64\libsass.so runtimes\linux-x64\native
        copy libsass_ubuntu_arm\libsass.so runtimes\linux-arm\native
        copy libsass_ubuntu_arm64\libsass.so runtimes\linux-arm64\native
        copy libsass_macos_x64\libsass.dylib runtimes\osx-x64\native
        copy libsass_macos_arm64\libsass.dylib runtimes\osx-arm64\native
        copy win\bin\release\x86\libsass.dll runtimes\win-x86\native
        copy win\bin\release\x64\libsass.dll runtimes\win-x64\native
        copy win\bin\release\arm\libsass.dll runtimes\win-arm\native
        copy win\bin\release\arm64\libsass.dll runtimes\win-arm64\native

    - name: Upload libsass binaries
      uses: actions/upload-artifact@v4
      with:
        name: libsass_binaries
        path: runtimes
